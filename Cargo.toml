[package]
name = "glitch-gremlin-program"
version = "0.1.0"
description = "On-chain program for Glitch Gremlin AI protocol"
edition = "2021"
license = "MIT"

[workspace]
members = [
    "programs/governance"
]

[workspace.dependencies]
num_enum = "0.5.11"
anchor-lang = "=0.28.0"
anchor-spl = "=0.28.0"
solana-program = "=1.16.12"
solana-sdk = "=1.16.12"
solana-program-test = "=1.16.12"
hashbrown = { version = "0.13", default-features = false, features = ["inline-more"] }

[dependencies]
# Solana ecosystem
solana-sdk.workspace = true
solana-program.workspace = true
anchor-lang = { workspace = true, features = ["derive"] }
anchor-spl.workspace = true
hashbrown = { workspace = true }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Serialization
borsh = "0.10"
borsh-derive = "0.10"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Async runtime & networking
tokio = { version = "1.36", features = ["full"] }
axum = { version = "0.7", features = ["http1", "http2", "macros"] }
hyper = { version = "1.1", features = ["server", "http1", "http2"] }
tower = { version = "0.4", features = ["util"] }
tower-http = { version = "0.5", features = ["fs"] }
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# Database & caching
redis = { version = "0.23", features = ["tokio-comp"] }
mongodb = { version = "2.8.2", default-features = false, features = ["tokio-sync"] }

# Cryptography & security
zeroize = { version = "=1.3.0", features = ["zeroize_derive"] }
ring = { version = "0.17", features = ["std"] }
sha2 = "0.10"
curve25519-dalek = { version = "=3.2.1", features = ["u64_backend"] }
ed25519-dalek = { version = "=2.1.1", features = ["u64_backend"] }
rand = { version = "0.8", features = ["small_rng"] }
solana-sys-crypto = { version = "=10.4.2025", features = ["bpf"] }

# Utilities
futures = "0.3.30"
bv = "0.11.1"
arrayref = "0.3.7"
memoffset = "0.9"
static_assertions = "1.1"
ahash = "=0.8.9"   # Downgrade to avoid unstable build_hasher_simple_hash_one

# Base64 for decoding account data
base64 = "=0.21.7"

# Time handling
time = { version = "=0.3", features = ["macros"] }
log = "=0.4.25"
env_logger = { version = "=0.10.0", features = ["auto-color", "humantime"] }

[features]
default = ["custom-heap", "custom-panic", "gremlin-hasher", "simd-accel"]
custom-heap = []
custom-panic = []
test = []
gremlin-hasher = [] # Use our custom GremlinHasher implementation
std-hasher = [] # Use standard library hasher (for comparison/testing)
simd-accel = [] # Enable SIMD acceleration for hashing (requires nightly)

[profile.release]
overflow-checks = true
lto = "fat"
codegen-units = 1

[profile.release.build-override]
opt-level = 3
incremental = false
codegen-units = 1

[dev-dependencies]
tokio = { version = "1.0", features = ["full", "test-util"] }

[[example]]
name = "basic"
path = "examples/basic.rs"
required-features = ["test"]

[workspace.metadata.gremlin]
# Configuration for the Gremlin hasher
hash_rounds = 3 # Number of hash rounds for enhanced security
simd_width = 256 # SIMD vector width when available
pubkey_optimization = true # Enable Solana pubkey-specific optimizations
